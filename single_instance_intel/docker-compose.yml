services:
  nginx:
    image: nginx:alpine
    container_name: vllm-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - vllm-apertus
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  vllm-apertus:
    image: public.ecr.aws/q9t5s3a7/vllm-cpu-release-repo:latest
    container_name: vllm-apertus
    expose:
      - "8000"
    volumes:
      - ./hf_cache:/root/.cache/huggingface
      - ./apertus_templates:/app/apertus_templates
    environment:
      - VLLM_API_KEY=${VLLM_API_KEY}
      - HUGGING_FACE_HUB_TOKEN=${HUGGING_FACE_HUB_TOKEN}
      # vLLM CPU Performance Optimizations (2x NUMA nodes, 48 cores each)
      - VLLM_CPU_KVCACHE_SPACE=250          # 200GB KV cache
      - VLLM_CPU_OMP_THREADS_BIND=auto      # Auto-bind threads across both NUMA nodes
      - VLLM_CPU_NUM_OF_RESERVED_CPU=2      # Reserve 1 CPU per NUMA node for vLLM frontend
      - OMP_NUM_THREADS=94                  # Use 94 threads (96 - 2 reserved)
      - VLLM_CPU_SGL_KERNEL=0              # Enable AMX small-batch kernels
    security_opt:
      - seccomp=unconfined                  # Required for NUMA memory optimizations
    cap_add:
      - SYS_NICE                            # Required for get_mempolicy syscall
    shm_size: 16g                           # Increased for tensor parallelism
    command: >
      --model swiss-ai/Apertus-8B-Instruct-2509
      --host 0.0.0.0
      --port 8000
      --api-key ${VLLM_API_KEY}
      --max-model-len 32768
      --dtype bfloat16
      --tensor-parallel-size 2
      --max-num-seqs 192
      --max-num-batched-tokens 49152
      --enable-chunked-prefill
      --disable-log-requests
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 180s                    # Increased for TP initialization